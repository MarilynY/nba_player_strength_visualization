{"version":3,"sources":["assets/images/logo.svg","components/TopBar.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","constants.js","components/Profile.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","className","src","logo","alt","React","Component","window","d3_hexbin","hexbin","ShotChart","update","nba","stats","shots","PlayerID","props","playerId","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","this","id","CountSlider","state","inputValue","onChange","value","setState","handleCountSliderChange","span","min","max","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","handleChartTypeChange","e","target","handleToolTipChange","_","debounce","checkedChildren","unCheckedChildren","defaultChecked","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerName","Profile","playerInfo","teamAbbreviation","teamCity","teamName","height","weight","pts","reb","ast","pie","Option","AutoComplete","SearchBar","dataSource","handleSearch","console","log","searchPlayers","fullName","key","onSelect","loadPlayerInfo","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","isLoading","info","Object","assign","commonPlayerInfo","playerHeadlineStats","catch","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f45b55f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9470e2d5.svg\";","import React from 'react';\nimport logo from '../assets/images/logo.svg';\n\nexport class TopBar extends React.Component {\n    render() {\n        return (\n            <div className=\"TopNavBar\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\nexport class ShotChart extends React.Component {\n    static propTypes = {\n      playerId: PropTypes.number.isRequired,\n      minCount: PropTypes.number,\n      chartType: PropTypes.string,\n      displayTooltip: PropTypes.bool\n    }\n    //do not need componentDidMount, because didUpdate will be called right away\n    componentDidMount() {\n        this.update();\n    }\n\n    componentDidUpdate() {\n        this.update();\n    }\n\n    update = () => {\n        nba.stats.shots({\n            PlayerID: this.props.playerId,\n        }).then((response) => {\n            // console.log(response);\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\n                x: (shot.locX + 250) / 10,\n                y: (shot.locY + 50) / 10,\n                action_type: shot.actionType,\n                shot_distance: shot.shotDistance,\n                shot_made_flag: shot.shotMadeFlag,\n            }));\n\n            const courtSelection = d3.select(\"#shot-chart\");\n                //clear chart\n                courtSelection.html('');  \n                const chart_court = court().width(500);\n                const chart_shots = shots()\n                    .shotRenderThreshold(this.props.minCount)\n                    .displayToolTips(this.props.displayTooltip)\n                    .displayType(this.props.chartType)\n            courtSelection.call(chart_court);\n            courtSelection.datum(final_shots).call(chart_shots);\n        });\n    }\n    \n    render() {\n        return (\n            <div id=\"shot-chart\"></div>\n        );\n    }\n}\n","import React from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nexport class CountSlider extends React.Component {\n    state = {\n      inputValue: 1,\n    };\n  \n    onChange = value => {\n      this.setState({\n        inputValue: value,\n      });\n      this.props.handleCountSliderChange(value)\n    };\n  \n    render() {\n      const { inputValue } = this.state;\n      return (\n        <Row>\n          <Col span={12}>\n            <Slider\n              min={1}\n              max={20}\n              onChange={this.onChange}\n              value={typeof inputValue === 'number' ? inputValue : 0}\n            />\n          </Col>\n          <Col span={4}>\n            <InputNumber\n              min={1}\n              max={20}\n              style={{ marginLeft: 16 }}\n              value={inputValue}\n              onChange={this.onChange}\n            />\n          </Col>\n        </Row>\n      );\n    }\n  }","import React from 'react';\nimport { ShotChart } from './ShotChart';\nimport { CountSlider } from './CountSlider';\nimport { Radio, Switch, Row, Col } from 'antd';\nimport _ from 'lodash';\n\nconst RadioGroup = Radio.Group;\nexport class DataViewContainer extends React.Component {\n    state = {\n        minCount: 2,\n        chartType: 'hexbin',\n        displayTooltip: true\n    }\n\n    handleCountSliderChange = (count) => {\n        this.setState({ \n            minCount: count\n        });\n    }\n\n    handleChartTypeChange = (e) => {\n        this.setState({\n            chartType: e.target.value\n        });\n    }\n\n    handleToolTipChange = (displayTooltip) => {\n        this.setState({\n            displayTooltip: displayTooltip\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"date-view\">\n                <ShotChart \n                    playerId={this.props.playerId} \n                    minCount={this.state.minCount}\n                    chartType={this.state.chartType}\n                    displayTooltip={this.state.displayTooltip}\n                />\n                <div className=\"filters\">\n                    {this.state.chartType === 'hexbin' ? \n                        <CountSlider handleCountSliderChange={_.debounce(this.handleCountSliderChange, 500)}/> : null\n                    }\n                    <Row>\n                        <Col span={13}>\n                            <RadioGroup onChange={this.handleChartTypeChange} value={this.state.chartType}>\n                                <Radio value=\"hexbin\">Hexbin</Radio>\n                                <Radio value=\"scatter\">Scatter</Radio>\n                            </RadioGroup>\n                        </Col>\n                        <Col span={4}>\n                            <Switch \n                                checkedChildren=\"on\" \n                                unCheckedChildren=\"off\" \n                                defaultChecked \n                                onChange={this.handleToolTipChange}\n                            />\n                        </Col>\n                    </Row>\n                    \n                    \n                </div>\n            </div>\n        );\n    }\n}","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\nexport const DEFAULT_PLAYER_INFO =  \n{\n    playerName: 'Stephen Curry',\n    playerId: 201939\n}","import React from 'react';\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\n\n\nexport class Profile extends React.Component {\n    render() {\n        const {\n            teamAbbreviation,\n            teamCity,\n            teamName,\n            playerName,\n            height,\n            weight,\n            playerId,\n            pts, reb, ast, pie,\n        } = this.props.playerInfo;\n        return (\n            <div className=\"profile\">\n                <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n                <img\n                    className=\"profile-pic\"\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n                    alt=\"Profile\"\n                />\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Team</div>\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\n                </div>\n                <img\n                    className=\"team-logo\"\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n                    alt=\"Team\"\n                />\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Height</div>\n                    <div className=\"profile-entry-right\">{`${height}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Weight</div>\n                    <div className=\"profile-entry-right\">{`${weight}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PTS</div>\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">REB</div>\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">AST</div>\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PIE</div>\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\n                </div>\n            </div>     \n        );\n    }\n}","import React from 'react';\nimport { AutoComplete, Input, Icon } from 'antd';\nimport nba from 'nba';\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\n\n// window.nba = nba;\nconst Option = AutoComplete.Option;\n\nexport class SearchBar extends React.Component {\n    state = {\n      dataSource: [],\n    };\n  \n    handleSearch = (value) => {\n        console.log(nba.searchPlayers(value));\n        this.setState({\n            dataSource: !value ? [] : nba.searchPlayers(value).map(\n                ({fullName, playerId}) => (\n                    <Option key={playerId} value={fullName}>\n                        <img\n                            className=\"player-option-image\"\n                            src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n                            alt={fullName}\n                        />\n                        <span className=\"player-option-label\">{fullName}</span>\n                    </Option>\n                )\n            )\n        });\n    };\n  \n    onSelect = (value, {key: playerId}) => {\n        console.log('onSelect', value, playerId);\n        this.props.loadPlayerInfo(playerId);\n    }\n  \n    render() {\n      const { dataSource } = this.state;\n      return (\n        <div>\n            <AutoComplete\n                className=\"search-bar\"\n                size=\"large\"\n                dataSource={dataSource}\n                onSelect={this.onSelect}\n                onSearch={this.handleSearch}\n                placeholder=\"Search NBA Player\"\n                optionLabelProp=\"value\"\n            >\n               <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\n            </AutoComplete>\n\n        </div>\n      );\n    }\n  }\n","import React from 'react';\nimport { DataViewContainer } from './DataViewContainer';\nimport { Profile } from './Profile';\nimport nba from 'nba';\nimport { SearchBar } from './SearchBar';\nimport { DEFAULT_PLAYER_INFO } from '../constants';\n\nexport class Main extends React.Component {\n    state = {\n        isLoading: false,\n        playerInfo: DEFAULT_PLAYER_INFO\n    }\n\n    componentDidMount() {\n        this.loadPlayerInfo(this.state.playerInfo.playerId);\n    }\n\n    loadPlayerInfo = (playerId) => {\n        //0. get player id from player name\n        //1. fire api to get player info\n        //2. set state\n        this.setState({ isLoading: true });\n        nba.stats.playerInfo({\n            PlayerID: playerId \n        }).then((info) => {\n            console.log(\"player info log: \", info);\n            // commonPlayerInfo: [{…}]\n            //playerHeadlineStats: [{…}]\n            const playerInfo = Object.assign({}, info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n            console.log(\"final player info:\", playerInfo);\n            this.setState({\n                playerInfo: playerInfo,\n                isLoading: false\n            });\n        }).catch((e) => {\n            console.log(e);\n            this.setState({ isLoading: false });\n        })\n\n    }\n    render() {\n        return (\n            <div className=\"main\">\n                <SearchBar loadPlayerInfo={this.loadPlayerInfo}/>\n                {\n                    this.state.isLoading ? \"is Loading\" : (\n                        <div className=\"player\">\n                            <Profile playerInfo={this.state.playerInfo}/>\n                            <DataViewContainer playerId={this.state.playerInfo.playerId}/>\n                        </div>\n                    )\n                }\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { TopBar } from './TopBar';\nimport { Main } from './Main';\n\nclass App extends React.Component {\n  render () {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Main />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}